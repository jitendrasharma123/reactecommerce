{"ast":null,"code":"var _jsxFileName = \"/home/jitendra/reactproject/src/childA.js\";\nimport { useState } from 'react';\nimport { Container, Row, Col, Button, Card, div } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Catproduct = ({\n  categoryproducts\n}) => {\n  {\n    categoryproducts.map(catproduct => {\n      console.log('catproduct', catproduct);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          style: \"width: 18rem;\",\n          children: [/*#__PURE__*/_jsxDEV(\"image\", {\n            class: \"card-img-top\",\n            src: catproduct.image,\n            alt: \"Card image cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"card-title\",\n              children: catproduct.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"card-text\",\n              children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"\",\n              class: \"btn btn-primary\",\n              children: \"Go somewhere\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 37\n        }, this)\n      }, void 0, false);\n    });\n  }\n};\n_c = Catproduct;\nexport default Catproduct;\nvar _c;\n$RefreshReg$(_c, \"Catproduct\");","map":{"version":3,"names":["useState","Container","Row","Col","Button","Card","div","jsxDEV","_jsxDEV","Fragment","_Fragment","Catproduct","categoryproducts","map","catproduct","console","log","children","class","style","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","href","_c","$RefreshReg$"],"sources":["/home/jitendra/reactproject/src/childA.js"],"sourcesContent":["import { useState } from 'react';\nimport { Container, Row, Col, Button, Card,div } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst Catproduct = ({categoryproducts})=>{\n        \n           \n            {categoryproducts.map((catproduct) => {\n                                    console.log('catproduct', catproduct)\n                                    return (<>\n                                    <div class=\"card\" style=\"width: 18rem;\">\n                                        <image class=\"card-img-top\" src={catproduct.image} alt=\"Card image cap\"></image>\n                                        <div class=\"card-body\">\n                                            <h5 class=\"card-title\">{catproduct.title}</h5>\n                                            <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                                            <a href=\"\" class=\"btn btn-primary\">Go somewhere</a>\n                                        </div>\n                                        </div> \n                                    </>)\n                                })\n            \n                            \n        \n            \n        \n    }\n}\n\nexport default Catproduct"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAACC,GAAG,QAAQ,iBAAiB;AACvE,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC9C,MAAMC,UAAU,GAAGA,CAAC;EAACC;AAAgB,CAAC,KAAG;EAG7B;IAACA,gBAAgB,CAACC,GAAG,CAAEC,UAAU,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,UAAU,CAAC;MACrC,oBAAQN,OAAA,CAAAE,SAAA;QAAAO,QAAA,eACRT,OAAA;UAAKU,KAAK,EAAC,MAAM;UAACC,KAAK,EAAC,eAAe;UAAAF,QAAA,gBACnCT,OAAA;YAAOU,KAAK,EAAC,cAAc;YAACE,GAAG,EAAEN,UAAU,CAACO,KAAM;YAACC,GAAG,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChFlB,OAAA;YAAKU,KAAK,EAAC,WAAW;YAAAD,QAAA,gBAClBT,OAAA;cAAIU,KAAK,EAAC,YAAY;cAAAD,QAAA,EAAEH,UAAU,CAACa;YAAK;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9ClB,OAAA;cAAGU,KAAK,EAAC,WAAW;cAAAD,QAAA,EAAC;YAA8F;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACvHlB,OAAA;cAAGoB,IAAI,EAAC,EAAE;cAACV,KAAK,EAAC,iBAAiB;cAAAD,QAAA,EAAC;YAAY;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC,gBACR,CAAC;IACP,CAAC,CAAC;EAM9B;AACJ,CAAC;AAAAG,EAAA,GAtBKlB,UAAU;AAwBhB,eAAeA,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}